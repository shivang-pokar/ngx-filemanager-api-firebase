{"version":3,"file":"ngx-filemanager-api-firebase.js","sources":["../../../projects/ngx-filemanager-api-firebase/src/lib/endpoint/middleware-helpers.ts","../../../projects/ngx-filemanager-api-firebase/src/lib/permissions/token-helper.ts","../../../projects/ngx-filemanager-api-firebase/src/lib/permissions/permissions.factory.ts","../../../projects/ngx-filemanager-api-firebase/src/lib/permissions/permissions-helper.ts","../../../projects/ngx-filemanager-api-firebase/src/lib/permissions/permissions-queries.ts","../../../projects/ngx-filemanager-api-firebase/src/lib/permissions/permissions-commands.ts","../../../projects/ngx-filemanager-api-firebase/src/lib/permissions/index.ts","../../../projects/ngx-filemanager-api-firebase/src/lib/utils/paths.ts","../../../projects/ngx-filemanager-api-firebase/src/lib/utils/translation-helpers.ts","../../../projects/ngx-filemanager-api-firebase/src/lib/utils/storage-helper.ts","../../../projects/ngx-filemanager-api-firebase/src/lib/api/commands/list.ts","../../../projects/ngx-filemanager-api-firebase/src/lib/api/commands/rename.ts","../../../projects/ngx-filemanager-api-firebase/src/lib/api/commands/move.ts","../../../projects/ngx-filemanager-api-firebase/src/lib/api/commands/copy.ts","../../../projects/ngx-filemanager-api-firebase/src/lib/api/commands/remove.ts","../../../projects/ngx-filemanager-api-firebase/src/lib/api/commands/edit.ts","../../../projects/ngx-filemanager-api-firebase/src/lib/api/commands/getContent.ts","../../../projects/ngx-filemanager-api-firebase/src/lib/api/commands/getSingle.ts","../../../projects/ngx-filemanager-api-firebase/src/lib/api/commands/createFolder.ts","../../../projects/ngx-filemanager-api-firebase/src/lib/api/commands/changePermissions.ts","../../../projects/ngx-filemanager-api-firebase/src/lib/api/commands/uploadFile.ts","../../../projects/ngx-filemanager-api-firebase/src/lib/api/commands/changePermissionsObject.ts","../../../projects/ngx-filemanager-api-firebase/src/lib/api/commands/index.ts","../../../projects/ngx-filemanager-api-firebase/src/lib/api/firebase-storage-api.ts","../../../projects/ngx-filemanager-api-firebase/src/lib/endpoint/middleware-upload.ts","../../../projects/ngx-filemanager-api-firebase/src/lib/endpoint/endpoint-express.ts","../../../projects/ngx-filemanager-api-firebase/src/public_api.ts","../../../projects/ngx-filemanager-api-firebase/src/ngx-filemanager-api-firebase.ts"],"sourcesContent":["import { Request, Response, NextFunction, RequestHandler } from 'express';\nconst cors = require('cors');\n\nexport function OptionRequestsAreOk(\n  req: Request,\n  res: Response,\n  next: NextFunction\n): RequestHandler {\n  if (req.method === 'OPTIONS') {\n    console.log('Recieved OPTIONS request sending OK');\n    res.status(200).send('Options are OK\\n');\n    return;\n  }\n  next();\n}\n\nexport function PostRequestsOnly(\n  req: Request,\n  res: Response,\n  next: NextFunction\n): RequestHandler {\n  if (req.method !== 'POST') {\n    const msg = 'Only POST requests are supported\\n';\n    console.warn(msg);\n    res.status(400).send(msg);\n    return;\n  }\n  next();\n}\n\nexport function HasBodyProp(bodyFieldName: string): RequestHandler {\n  return (req: Request, res: Response, next: NextFunction) => {\n    if (!req.body[bodyFieldName]) {\n      const msg = `Request is missing property in req.body: \"${bodyFieldName}\" \\n`;\n      console.warn(msg);\n      res.status(400).send(msg);\n      return;\n    }\n    next();\n  };\n}\n\nexport function HasQueryParam(paramName: string): RequestHandler {\n  return (req: Request, res: Response, next: NextFunction) => {\n    if (!req.query[paramName]) {\n      const msg = `Request is missing property in req.params: \"${paramName}\" \\n`;\n      console.warn(msg);\n      res.status(400).send(msg);\n      return;\n    }\n    next();\n  };\n}\n\nexport async function AddCors(req: Request, res: Response, next: NextFunction) {\n  res.setHeader(\n    'Access-Control-Allow-Headers',\n    'Authorization, X-Requested-With, Accept, Content-Type, Origin, Cache-Control, X-File-Name'\n  );\n  res.setHeader('Access-Control-Allow-Origin', '*');\n  try {\n    await new Promise((resolve, reject) => {\n      cors({ origin: true })(req, res, () => {\n        resolve();\n      });\n    });\n    next();\n  } catch (error) {\n    throw new Error(error.message);\n  }\n}\n\nexport function LogRequest(req: Request, res: Response, next: NextFunction) {\n  const body = JSON.stringify(req.body || {}, null, 4).slice(0, 500);\n  const msg = `\n---- request: ${req.url}\nmethod: ${req.method}\n query: ${JSON.stringify(req.query, null, 4)}\n  body: ${body}\n----`;\n  console.log(msg);\n  next();\n}\n","import * as jwt from 'jsonwebtoken';\nimport { CoreTypes } from '../types';\n\nexport async function GetTokenFromRequest(req: Request) {\n  let idToken;\n  const isInHeader = req.headers['authorization'];\n  const hasCookie = req['cookies'];\n\n  if (isInHeader) {\n    // Read the ID Token from the Authorization header.\n    idToken = req.headers['authorization'];\n  } else if (hasCookie) {\n    // Read the ID Token from cookie.\n    idToken = req['cookies'].__session;\n  } else {\n    throw new Error(\n      'Request Header doesn\\'t contain a valid authorization bearer'\n    );\n  }\n\n  const decodedToken = await DecodeJWT(idToken);\n  return decodedToken as CoreTypes.UserCustomClaims;\n}\n\nexport async function DecodeJWT(bearer: string): Promise<{}> {\n  try {\n    const decoded = jwt.decode(bearer, { json: true });\n    return decoded;\n  } catch (error) {\n    throw new Error('Error decoding JWT' + error.message);\n  }\n}\n","import { CoreTypes } from '../types';\n\nfunction blankUserClaim(): CoreTypes.UserCustomClaims {\n  return {\n    groups: []\n  };\n}\n\nfunction blankPermissionsObj(): CoreTypes.FilePermissionsObject {\n  return {\n    others: 'read/write',\n    readers: [],\n    writers: []\n  };\n}\n\nexport const permsFactory = {\n  blankPermissionsObj,\n  blankUserClaim,\n};\n","import { VError } from 'verror';\nimport { File } from '../types/google-cloud-types';\nimport { SetMetadataResponse } from '@google-cloud/common';\n\nasync function SetMetaPropertyString(\n  file: File,\n  key: string,\n  newValueString: string\n): Promise<any> {\n  try {\n    const metaObj = { metadata: {} };\n    metaObj.metadata[key] = newValueString;\n    const res = await file.setMetadata(metaObj);\n    return res[0];\n  } catch (error) {\n    let fileExists: boolean;\n    try {\n      [fileExists] = await file.exists();\n    } catch (e) {\n      console.error(\n        'storage-helper: SetMetaProperty() error getting file.exists',\n        e\n      );\n    }\n    console.error('storage-helper: SetMetaProperty() error setting meta', {\n      fileExists,\n      filePath: file.name,\n      newValueString\n    });\n    throw new Error(error);\n  }\n}\n\nasync function SetMetaPropertyObj(\n  file: File,\n  key: string,\n  newValue: {}\n): Promise<{}> {\n  try {\n    const newValueString = JSON.stringify(newValue);\n    return SetMetaPropertyString(file, key, newValueString);\n  } catch (error) {\n    throw new Error(error);\n  }\n}\n\nasync function GetMetaPropertyString(file: File, key: string): Promise<string> {\n  let newValueString;\n  try {\n    const [meta] = await file.getMetadata();\n    const metaData = meta.metadata || {};\n    newValueString = metaData[key] || null;\n    return newValueString;\n  } catch (error) {\n    try {\n      const [fileExists] = await file.exists();\n    } catch (error) {\n      console.error(error);\n    }\n    console.error('storage-helper: GetMetaProperty() error getting meta', {});\n    throw new VError(error);\n  }\n}\n\nasync function GetMetaPropertyObj<T>(file: File, key: string): Promise<T> {\n  let newValueString;\n  try {\n    newValueString = await GetMetaPropertyString(file, key);\n    const newValueObj = JSON.parse(newValueString);\n    return newValueObj;\n  } catch (error) {\n    console.error(\n      `could not convert the meta property \"${key}\" to a JSON object`,\n      error,\n      { newValueString }\n    );\n    throw new VError(error + ' error in JSON processing: ' + newValueString);\n  }\n}\n\nexport const permHelper = {\n  GetMetaPropertyObj: GetMetaPropertyObj,\n  SetMetaPropertyObj: SetMetaPropertyObj,\n  GetMetaPropertyString: GetMetaPropertyString,\n  SetMetaPropertyString: SetMetaPropertyString,\n};\n","import { File } from '../types/google-cloud-types';\nimport { GetTokenFromRequest } from './token-helper';\nimport { CoreTypes } from '../types';\nimport { permsFactory } from './permissions.factory';\nimport { VError } from 'verror';\nimport { permHelper } from './permissions-helper';\n\nasync function RetrieveFilePermissions(\n  file: File\n): Promise<CoreTypes.FilePermissionsObject> {\n  const fromStorage = await permHelper.GetMetaPropertyObj<CoreTypes.FilePermissionsObject>(\n    file,\n    'permissions'\n  );\n  const blank = permsFactory.blankPermissionsObj();\n  const safePerms = {\n    ...blank,\n    ...(fromStorage || {}),\n  };\n  return safePerms;\n}\n\nasync function RetrieveCustomClaims(req: Request) {\n  let token;\n  try {\n    token = await GetTokenFromRequest(req);\n  } catch (error) {\n    console.log('No bearer token found on request, no permissions for user');\n    return permsFactory.blankUserClaim();\n  }\n  const claims = token as CoreTypes.UserCustomClaims;\n  if (!claims.groups) {\n    claims.groups = [];\n  }\n  return claims;\n}\n\nfunction TryCheckHasAnyPermissions(claims: CoreTypes.UserCustomClaims) {\n  if (!claims.groups.length && !claims.userIsSudo) {\n    throw new Error('No user permissions found, cannot change permissions');\n  }\n}\n\nfunction CanRead(othersPermissions: CoreTypes.FilePermissionOthers) {\n  return (\n    othersPermissions == null ||\n    othersPermissions === 'read' ||\n    othersPermissions === 'read/write'\n  );\n}\n\nfunction CanWrite(othersPermissions: CoreTypes.FilePermissionOthers) {\n  return othersPermissions === 'read/write';\n}\n\nfunction CanOthersDo(\n  othersPermissions: CoreTypes.FilePermissionOthers,\n  toCheck: 'read' | 'write'\n) {\n  switch (toCheck) {\n    case 'read':\n      return CanRead(othersPermissions);\n    case 'write':\n      return CanWrite(othersPermissions);\n    default:\n      break;\n  }\n}\n\nexport type FilePermission = 'write' | 'read';\n\nfunction TryCheckFileAccess(\n  filePermissions: CoreTypes.FilePermissionsObject,\n  claims: CoreTypes.UserCustomClaims,\n  toCheck: 'read' | 'write'\n): boolean {\n  // Anyone can do something\n  const anyoneCanDo = CanOthersDo(filePermissions.others, toCheck);\n  if (anyoneCanDo) {\n    return true;\n  }\n  // Has no userclaims\n  const hasClaims = !!claims;\n  if (!hasClaims) {\n    return false;\n  }\n  // Sudo can do anything\n  const sudoCanDo = claims.userIsSudo;\n  if (sudoCanDo) {\n    return true;\n  }\n  const userAndGroups = [...claims.groups, claims.user_id];\n  let arrayToCheck;\n  if (toCheck === 'read') {\n    arrayToCheck = filePermissions.readers;\n  } else {\n    arrayToCheck = filePermissions.writers;\n  }\n  if (IsPartOfArray(arrayToCheck, userAndGroups)) {\n    return true;\n  }\n  return false;\n}\n\nfunction IsPartOfArray(\n  arr: CoreTypes.FilePermissionEntity[],\n  usersGroups: string[]\n) {\n  const hasNoGroupsToCheck = !usersGroups || !usersGroups.length;\n  if (hasNoGroupsToCheck) {\n    return false;\n  }\n  const userGroupSet = new Set(usersGroups);\n  const isInArray = arr.find((entity) => userGroupSet.has(entity));\n  return !!isInArray;\n}\n\nfunction CheckCanEditPermissions(\n  currentFilePermissions: CoreTypes.FilePermissionsObject,\n  newPermissions: CoreTypes.FilePermissionsObject,\n  claims: CoreTypes.UserCustomClaims\n) {\n  const canEditPermissions = TryCheckFileAccess(\n    currentFilePermissions,\n    claims,\n    'write'\n  );\n  const canEditPermissionsAfter = TryCheckFileAccess(\n    newPermissions,\n    claims,\n    'write'\n  );\n  if (!canEditPermissions) {\n    throw new VError('Cannot edit permissions here');\n  }\n  if (!canEditPermissionsAfter) {\n    throw new VError(\n      'Cannot change permissions, so you wont be able to change back'\n    );\n  }\n}\n\nexport const permsQueries = {\n  RetrieveFilePermissions,\n  RetrieveCustomClaims,\n  TryCheckHasAnyPermissions,\n  TryCheckFileAccess,\n  IsPartOfArray,\n  CheckCanEditPermissions,\n};\n","import { File } from '../types/google-cloud-types';\nimport { CoreTypes } from '../types';\nimport { permHelper } from './permissions-helper';\n\nasync function UpdateFilePermissions(\n  file: File,\n  newPermissions: CoreTypes.FilePermissionsObject\n) {\n  return permHelper.SetMetaPropertyObj(file, 'permissions', newPermissions);\n}\n\nexport const permsCommands = {\n  UpdateFilePermissions\n};\n","import { permsQueries } from './permissions-queries';\nimport { permsFactory } from './permissions.factory';\nimport { permsCommands } from './permissions-commands';\n\nexport const perms = {\n  factory: permsFactory,\n  commands: permsCommands,\n  queries: permsQueries,\n};\n","import * as path from 'path';\n\nfunction HasPrefixSlash(inputPath: string): boolean {\n  if (!inputPath || !inputPath.length) {\n    return false;\n  }\n  const hasPrefix = inputPath.startsWith('/');\n  return hasPrefix;\n}\n\nfunction HasTrailingSlash(inputPath: string): boolean {\n  if (!inputPath || !inputPath.length) {\n    return false;\n  }\n  const hasTrailing = inputPath.endsWith('/');\n  return hasTrailing;\n}\n\nfunction EnsureTrailingSlash(inputPath: string): string {\n  if (!inputPath) {\n    return '/';\n  }\n  const hasTrailing = HasTrailingSlash(inputPath);\n  const pathParsed = hasTrailing ? inputPath : inputPath + '/';\n  return pathParsed;\n}\n\nfunction EnsureNoPrefixSlash(inputPath: string): string {\n  const hasPrefix = HasPrefixSlash(inputPath);\n  const pathParsed = hasPrefix ? inputPath.slice(1) : inputPath;\n  return pathParsed;\n}\n\nfunction EnsurePrefixSlash(inputPath: string): string {\n  if (!inputPath) {\n    return '/';\n  }\n  const hasPrefix = HasPrefixSlash(inputPath);\n  const pathParsed = hasPrefix ? inputPath : '/' + inputPath;\n  return pathParsed;\n}\n\nfunction EnsureNoTrailingSlash(inputPath: string): string {\n  const hasTrailing = HasTrailingSlash(inputPath);\n  const pathParsed = hasTrailing ? inputPath.slice(0, -1) : inputPath;\n  return pathParsed;\n}\n\nfunction EnsureAbsolutePathFile(filePath: string) {\n  return EnsurePrefixSlash(EnsureNoTrailingSlash(filePath));\n}\n\nfunction EnsureAbsolutePathDir(folderPath: string) {\n  return EnsurePrefixSlash(EnsureTrailingSlash(folderPath));\n}\n\nfunction EnsureGoogleStoragePathDir(folderPath: string) {\n  return EnsureNoPrefixSlash(EnsureTrailingSlash(folderPath));\n}\n\nfunction EnsureGoogleStoragePathFile(filePath: string) {\n  return EnsureNoPrefixSlash(EnsureNoTrailingSlash(filePath));\n}\n\nfunction GetRelativePath(\n  currentDirectoryPath: string,\n  absObjectPath: string\n): string {\n  const relativePath = absObjectPath.slice(currentDirectoryPath.length);\n  return relativePath;\n}\n\nfunction GetParentDir(currentDirectoryPath: string): string {\n  const parsed = EnsurePrefixSlash(currentDirectoryPath);\n  const parentPath = path.dirname(parsed);\n  return EnsureGoogleStoragePathDir(parentPath);\n}\n\nfunction IsCurrentPath(\n  currentDirectoryPath: string,\n  absObjectPath: string\n): boolean {\n  const relativePath = GetRelativePath(currentDirectoryPath, absObjectPath);\n  const isCurrentDir = !relativePath;\n  return isCurrentDir;\n}\n\nfunction IsCurrentPathFile(\n  currentDirectoryPath: string,\n  absObjectPath: string\n): boolean {\n  const relativePath = GetRelativePath(currentDirectoryPath, absObjectPath);\n  const slashSegments = relativePath.split('/');\n  const isCurrentPathFile = slashSegments.length < 2;\n  return isCurrentPathFile;\n}\n\nfunction IsObjNameDir(storageObjectName: string) {\n  const filePathParsed = EnsurePrefixSlash(storageObjectName);\n  const isDir = HasTrailingSlash(filePathParsed);\n  return isDir;\n}\n\nfunction IsObjNameFile(storageObjectName: string) {\n  return !IsObjNameDir(storageObjectName);\n}\n\nfunction GetSubDirectory(\n  currentDirectoryPath: string,\n  absObjectPath: string\n): string {\n  const relativePath = GetRelativePath(currentDirectoryPath, absObjectPath);\n  const slashSegments = relativePath.split('/');\n  const subDirectory = slashSegments.shift();\n  return subDirectory;\n}\n\nfunction Add2ToPath(inputPath: string): string {\n  const dotSegments = inputPath.split('.');\n  const extension = dotSegments.pop();\n  const fileName = dotSegments.join('.') + ' (2)' + '.' + extension;\n  return fileName;\n}\n\nfunction Add2ToPathDir(inputPath: string): string {\n  const pathWithoutSlash = EnsureNoTrailingSlash(inputPath);\n  const pathWith2 = pathWithoutSlash + ' (2)';\n  const newDirName =  EnsureTrailingSlash(pathWith2);\n  return newDirName;\n}\n\nfunction GetFileNameWithExtension(inputPath: string): string {\n  const fileNameWithExt = inputPath.split('/').pop();\n  return fileNameWithExt;\n}\n\nfunction GetFileNameWithoutExtension(inputPath: string): string {\n  const fileNameWithExt = GetFileNameWithExtension(inputPath);\n  const segments = fileNameWithExt.split('.');\n  segments.pop(); // remove extension\n  return segments.join('.');\n}\n\nfunction GetPathUpToLastBracket(inputPath: string): string {\n  const slashes = inputPath.split('/');\n  slashes.pop();\n  const dirPath = slashes.join('/');\n  const fileName = inputPath.slice(dirPath.length);\n  const bracketSegments = fileName.split('(');\n  bracketSegments.pop();\n  const fileNameWith = bracketSegments.join('(');\n  if (fileName.includes('(')) {\n    const filepathWithBracket = path.join(dirPath, fileNameWith + '(');\n    return filepathWithBracket;\n  }\n  const dotSegments = inputPath.split('.');\n  if (dotSegments.length < 2) {\n    return inputPath;\n  }\n  dotSegments.pop();\n  return dotSegments.join('.');\n}\n\nexport const paths = {\n  HasPrefixSlash,\n  HasTrailingSlash,\n  EnsureTrailingSlash,\n  EnsureNoPrefixSlash,\n  EnsurePrefixSlash,\n  EnsureNoTrailingSlash,\n  EnsureAbsolutePathFile,\n  EnsureAbsolutePathDir,\n  EnsureGoogleStoragePathDir,\n  EnsureGoogleStoragePathFile,\n  GetRelativePath,\n  IsCurrentPath,\n  IsCurrentPathFile,\n  IsObjNameDir,\n  IsObjNameFile,\n  GetSubDirectory,\n  GetParentDir,\n  GetFileNameWithExtension,\n  GetFileNameWithoutExtension,\n  GetPathUpToLastBracket,\n  Add2ToPath,\n  Add2ToPathDir\n};\n","import { FileFromStorage, File } from '../types/google-cloud-types';\nimport { Readable } from 'stream';\nimport * as request from 'request';\nimport * as path from 'path';\nimport { VError } from 'verror';\nimport { perms } from '../permissions';\nimport { paths } from './paths';\nimport { CoreTypes } from '../types';\n\nexport function translateRawStorage(storageObject: File): FileFromStorage {\n  const filePath = storageObject.name;\n  const filePathParsed = paths.EnsurePrefixSlash(filePath);\n  return {\n    ref: storageObject,\n    name: path.basename(filePathParsed),\n    fullPath: filePathParsed,\n    isDir: paths.HasTrailingSlash(filePathParsed)\n  };\n}\n\nexport function makePhantomStorageFolder(folderPath: string): FileFromStorage {\n  const pathParsed = paths.EnsureAbsolutePathDir(folderPath);\n  return {\n    ref: null,\n    name: path.basename(pathParsed),\n    fullPath: pathParsed,\n    isDir: true,\n    isPhantomFolder: true\n  };\n}\n\nexport async function translateStorageToResFile(\n  f: FileFromStorage\n): Promise<CoreTypes.ResFile> {\n  const resFile: CoreTypes.ResFile = {} as any;\n  resFile.name = f.name;\n  if (f.isDir) {\n    resFile.type = 'dir';\n    resFile.fullPath = paths.EnsureAbsolutePathDir(f.fullPath);\n  } else {\n    resFile.type = 'file';\n    resFile.fullPath = paths.EnsureAbsolutePathFile(f.fullPath);\n  }\n  if (f.isPhantomFolder) {\n    resFile.permissions = perms.factory.blankPermissionsObj();\n    resFile.isPhantomFolder = true;\n    return resFile;\n  }\n  try {\n    const [exists] = await f.ref.exists();\n    if (!exists) {\n      throw new Error('File not found: ' + resFile.fullPath);\n    }\n    const [aclObj] = await f.ref.acl.get();\n    resFile.rightsFirebase = aclObj as any;\n    const metaResp = await f.ref.getMetadata();\n    const metaData = metaResp[0];\n    const customMeta = metaData.metadata || {};\n    const permissions = await perms.queries.RetrieveFilePermissions(f.ref);\n    resFile.permissions = permissions;\n    resFile.size = metaData.size;\n    resFile.date = metaData.updated;\n    resFile.metaData = customMeta;\n    return resFile;\n  } catch (error) {\n    throw new VError(error);\n  }\n}\n\nexport async function StreamToPromise(stream: Readable): Promise<string> {\n  return new Promise<string>((resolve, reject) => {\n    let stringRes: string;\n    stream.on('readable', function(buffer) {\n      const part: string = buffer.read().toString() as string;\n      stringRes += part;\n      console.log('stream data ' + part);\n    });\n    stream.on('end', res => {\n      resolve(stringRes);\n    });\n    stream.on('error', err => {\n      const errmsg =\n        'StreamToPromise(stream: Readable), Error reading stream: ' +\n        err.message;\n      console.error(errmsg, { err });\n      reject(errmsg);\n    });\n  });\n}\n\nexport function getResult(res: request.Response): CoreTypes.ResultObj {\n  const fail = res.statusCode !== 204;\n  return {\n    success: !fail,\n    error: fail ? 'error: ' + res.body : null\n  };\n}\n\nexport function getResultFromArray(\n  res: request.Response[]\n): CoreTypes.ResultObj {\n  const fail = res.find(r => r.statusCode !== 204);\n  return {\n    success: !fail,\n    error: fail ? 'error: ' + JSON.stringify(fail.body) : null\n  };\n}\n\nexport function ResultsObjFromArray(\n  moveResults: CoreTypes.ResultObj[]\n): CoreTypes.ResultObj {\n  return moveResults.reduce(\n    (acc, cur) => {\n      if (cur.error) {\n        acc.error += ' | ' + cur.error;\n        acc.success = false;\n      }\n      return acc;\n    },\n    { error: '', success: true }\n  );\n}\n","import * as path from 'path';\nimport * as request from 'request';\nimport { VError } from 'verror';\nimport { GetFilesOptions } from '@google-cloud/storage';\n\nimport { Bucket, File, FileFromStorage } from '../types/google-cloud-types';\nimport { paths } from './paths';\nimport { perms } from '../permissions';\nimport { CoreTypes } from '../types';\nimport {\n  translateStorageToResFile,\n  makePhantomStorageFolder,\n  translateRawStorage\n} from './translation-helpers';\n\nasync function GetAllChildrenWithPrefix(\n  bucket: Bucket,\n  fileOrDirectoryPath: string\n): Promise<File[]> {\n  const pathNoPrefix = paths.EnsureNoPrefixSlash(fileOrDirectoryPath);\n  const options: GetFilesOptions = {};\n  options.prefix = pathNoPrefix;\n  try {\n    const result = await bucket.getFiles(options);\n    const files = result[0];\n    return files;\n  } catch (error) {\n    throw new VError(error);\n  }\n}\n\nasync function TryRenameFile(\n  file: File,\n  oldPrefix: string,\n  newPrefix: string\n): Promise<CoreTypes.ResultObj> {\n  try {\n    const originalFilePath = file.name;\n    const relativePath = originalFilePath.slice(oldPrefix.length);\n    const newPath = path.join(newPrefix, relativePath);\n    const newFilePath = paths.EnsureNoPrefixSlash(newPath);\n    console.log(`- renaming \"${originalFilePath}\" -> \"${newFilePath}\"`);\n    const [response] = await file.move(newFilePath);\n    return { error: '', success: true };\n  } catch (error) {\n    const [fileExists] = await file.exists();\n    console.error('storage-helper: TryCopyFile() error renaming file', {\n      fileExists,\n      fileName: file.name,\n      oldPrefix,\n      newPrefix\n    });\n    throw new VError(error);\n  }\n}\n\nasync function TryCopyFile(file: File, oldPrefix: string, newPrefix: string) {\n  try {\n    const originalFilePath = file.name;\n    const relativePath = originalFilePath.slice(oldPrefix.length);\n    const newPath = path.join(newPrefix, relativePath);\n    const newFilePath = paths.EnsureNoPrefixSlash(newPath);\n    console.log(`- copying \"${originalFilePath}\" -> \"${newFilePath}\"`);\n    const result = await file.copy(newFilePath);\n    return result[1];\n  } catch (error) {\n    const [fileExists] = await file.exists();\n    console.error('storage-helper: TryCopyFile() error copying file', {\n      fileExists\n    });\n    throw new VError(error);\n  }\n}\n\nasync function TryCheckWritePermission(\n  bucket: Bucket,\n  newDirPath: string,\n  claims: CoreTypes.UserCustomClaims\n): Promise<any> {\n  try {\n    const parentPath = paths.GetParentDir(newDirPath);\n    const isRoot = parentPath === '';\n    if (isRoot) {\n      return;\n    }\n    const parentDir = bucket.file(parentPath);\n    const [fileExists] = await parentDir.exists();\n    if (!fileExists) {\n      return TryCheckWritePermission(bucket, parentPath, claims);\n    }\n    const parentPermissions = await perms.queries.RetrieveFilePermissions(\n      parentDir\n    );\n    const result = perms.queries.TryCheckFileAccess(\n      parentPermissions,\n      claims,\n      'write'\n    );\n    if (!result) {\n      throw new Error(\n        'Permission denied creating item in directory:' + parentPath\n      );\n    }\n  } catch (error) {\n    throw new Error(error);\n  }\n}\n\n// LIST\n\ninterface FilesAndPrefixes {\n  files: File[];\n  prefixes: string[];\n}\n\nexport function MakeOptionsListRoot(): GetFilesOptions {\n  return {\n    delimiter: '/',\n    includeTrailingDelimiter: true,\n    autoPaginate: false\n  } as any;\n}\n\nexport function MakeOptionsList(inputDirectoryPath: string) {\n  return {\n    delimiter: '/',\n    includeTrailingDelimiter: true,\n    directory: inputDirectoryPath,\n    autoPaginate: false\n  } as any;\n}\n\nexport async function GetFilesAndPrefixes(\n  bucket: Bucket,\n  options: GetFilesOptions\n): Promise<FilesAndPrefixes> {\n  return new Promise<FilesAndPrefixes>((resolve, reject) => {\n    const callback = (\n      err: Error | null,\n      files?: File[],\n      nextQuery?: {},\n      apiResponse?: request.Response\n    ) => {\n      if (err) {\n        reject(err);\n        return;\n      }\n      const prefixes = apiResponse['prefixes'] || [];\n      const result: FilesAndPrefixes = {\n        files: files || [],\n        prefixes: prefixes\n      };\n      resolve(result);\n    };\n    bucket.getFiles(options, callback);\n  });\n}\n\nexport async function GetFiles(\n  bucket: Bucket,\n  options: GetFilesOptions\n): Promise<FileFromStorage[]> {\n  try {\n    const result = await bucket.getFiles(options);\n    const storageObjects = result[0];\n    const files = storageObjects.map(o => translateRawStorage(o));\n    return files;\n  } catch (error) {\n    throw new VError(error);\n  }\n}\n\nexport async function GetListFromStorage(\n  bucket: Bucket,\n  inputDirectoryPath: string\n): Promise<FileFromStorage[]> {\n  const googleStorageDirPath = paths.EnsureGoogleStoragePathDir(\n    inputDirectoryPath\n  );\n  const isRootPath = googleStorageDirPath === '/' || '';\n  let options;\n  if (isRootPath) {\n    options = MakeOptionsListRoot();\n  } else {\n    options = MakeOptionsList(googleStorageDirPath);\n  }\n  try {\n    const result = await GetFilesAndPrefixes(bucket, options);\n    const allObjects = result.files.map(o => translateRawStorage(o));\n\n    const allObjectsPathsSet = new Set(allObjects.map(f => f.ref.name));\n    const phantomPrefixes = result.prefixes.filter(\n      prefix => !allObjectsPathsSet.has(prefix)\n    );\n\n    const newPhantomFolders = phantomPrefixes.map(phantomPath =>\n      makePhantomStorageFolder(phantomPath)\n    );\n    const combinedList = [...allObjects, ...newPhantomFolders];\n    const filesWithoutCurrentDirectory = combinedList.filter(\n      f => paths.EnsureGoogleStoragePathDir(f.fullPath) !== googleStorageDirPath\n    );\n    return filesWithoutCurrentDirectory;\n  } catch (error) {\n    throw new VError(error);\n  }\n}\n\nexport async function GetListWithoutPermissions(\n  bucket: Bucket,\n  inputDirectoryPath: string\n): Promise<CoreTypes.ResFile[]> {\n  try {\n    const files = await GetListFromStorage(bucket, inputDirectoryPath);\n    const resFiles = await Promise.all(\n      files.map(f => translateStorageToResFile(f))\n    );\n    return resFiles;\n  } catch (error) {\n    throw new VError(error);\n  }\n}\n\nexport const storage = {\n  GetListWithoutPermissions,\n  GetAllChildrenWithPrefix,\n  MakeOptionsListRoot,\n  MakeOptionsList,\n  TryRenameFile,\n  TryCopyFile,\n  TryCheckWritePermission\n};\n","import { Bucket } from '../../types/google-cloud-types';\nimport { VError } from 'verror';\nimport { perms } from '../../permissions';\nimport { CoreTypes } from '../../types';\nimport { storage } from '../../utils/storage-helper';\n\nexport async function GetList(\n  bucket: Bucket,\n  inputDirectoryPath: string,\n  claims: CoreTypes.UserCustomClaims,\n  isAdmin?: boolean\n): Promise<CoreTypes.ResFile[]> {\n  try {\n    const resFiles = await storage.GetListWithoutPermissions(\n      bucket,\n      inputDirectoryPath\n    );\n    if (isAdmin) {\n      return resFiles;\n    }\n    const filesAllowed = resFiles.filter(f => {\n      return perms.queries.TryCheckFileAccess(f.permissions, claims, 'read');\n    });\n    return filesAllowed;\n  } catch (error) {\n    throw new VError(error);\n  }\n}\n","import { Bucket } from '../../types/google-cloud-types';\nimport { CoreTypes } from '../../types';\nimport { VError } from 'verror';\nimport { paths } from '../../utils/paths';\nimport { storage } from '../../utils/storage-helper';\nimport { ResultsObjFromArray } from '../../utils/translation-helpers';\n\nexport async function RenameFile(\n  bucket: Bucket,\n  inputSrc: string,\n  inputDest: string,\n  claims: CoreTypes.UserCustomClaims\n) {\n  try {\n    const parsedSrc = paths.EnsureNoPrefixSlash(inputSrc);\n    const parsedDest = paths.EnsureNoPrefixSlash(inputDest);\n    const fileItem = bucket.file(parsedSrc);\n    const [exists] = await fileItem.exists();\n    if (!exists) {\n      throw new Error(`\nitem: \"${fileItem.name}\" does not exist\nbucket: \"${bucket.name}\"\n\ninputSrc: \"${inputSrc}\",\ninputDest: \"${inputDest}\",\n\nparsedSrc: \"${parsedSrc}\",\nparsedDest: \"${parsedDest}\",\n`);\n    }\n    const isFile = !inputSrc.endsWith('/');\n    if (isFile) {\n      const resultObj = await storage.TryRenameFile(\n        fileItem,\n        parsedSrc,\n        parsedDest\n      );\n      return resultObj;\n    }\n    const allChildren = await storage.GetAllChildrenWithPrefix(\n      bucket,\n      parsedSrc\n    );\n    const moveResults = await Promise.all(\n      allChildren.map(f => storage.TryRenameFile(f, parsedSrc, parsedDest))\n    );\n    return ResultsObjFromArray(moveResults);\n  } catch (error) {\n    throw new VError(error);\n  }\n}\n","import { Bucket } from '../../types/google-cloud-types';\nimport { ResultsObjFromArray } from '../../utils/translation-helpers';\nimport * as path from 'path';\nimport { CoreTypes } from '../../types';\nimport { VError } from 'verror';\nimport { paths } from '../../utils/paths';\nimport { storage } from '../../utils/storage-helper';\n\nexport async function moveWithChildren(\n  bucket: Bucket,\n  itemPath: string,\n  newFolderPrefix: string\n) {\n  try {\n    const oldFolderPrefix = paths.EnsureNoPrefixSlash(path.dirname(itemPath));\n    const allChildren = await storage.GetAllChildrenWithPrefix(bucket, itemPath);\n    const successArray = await Promise.all(\n      allChildren.map(f => storage.TryRenameFile(f, oldFolderPrefix, newFolderPrefix))\n    );\n    return successArray;\n  } catch (error) {\n    throw new VError(error);\n  }\n}\n\nexport async function MoveFiles(\n  bucket: Bucket,\n  items: string[],\n  newDirectoryPath: string,\n  claims: CoreTypes.UserCustomClaims\n) {\n  try {\n    const newFolderPrefix = paths.EnsureGoogleStoragePathDir(newDirectoryPath);\n    const moveResultsArrArr = await Promise.all(\n      items.map(filePath => moveWithChildren(bucket, filePath, newFolderPrefix))\n    );\n    const moveResultsArr = moveResultsArrArr.reduce((acc, cur) => {\n      return acc.concat(cur);\n    }, []);\n    return ResultsObjFromArray(moveResultsArr);\n  } catch (error) {\n    throw new VError(error);\n  }\n}\n","import { Bucket } from '../../types/google-cloud-types';\nimport { getResultFromArray } from '../../utils/translation-helpers';\nimport * as path from 'path';\nimport { CoreTypes } from '../../types';\nimport { VError } from 'verror';\nimport { paths } from '../../utils/paths';\nimport { storage } from '../../utils/storage-helper';\n\nexport async function copyWithChildren(\n  bucket: Bucket,\n  itemPath: string,\n  newFolderPrefix: string\n) {\n  try {\n    const oldFolderPrefix = paths.EnsureNoPrefixSlash(path.dirname(itemPath));\n    const allChildren = await storage.GetAllChildrenWithPrefix(bucket, itemPath);\n    const successArray = await Promise.all(\n      allChildren.map(f => storage.TryCopyFile(f, oldFolderPrefix, newFolderPrefix))\n    );\n    return successArray;\n  } catch (error) {\n    throw new VError(error);\n  }\n}\n\nexport async function CopyFiles(\n  bucket: Bucket,\n  items: string[],\n  newDirectoryPath: string,\n  claims: CoreTypes.UserCustomClaims\n) {\n  try {\n    const newFolderPrefix = paths.EnsureGoogleStoragePathDir(newDirectoryPath);\n    const copyResultsArrArr = await Promise.all(\n      items.map(filePath => copyWithChildren(bucket, filePath, newFolderPrefix))\n    );\n    const copyResultsArr = copyResultsArrArr.reduce((acc, cur) => {\n      return acc.concat(cur);\n    }, []);\n    const results = getResultFromArray(copyResultsArr);\n    return results;\n  } catch (error) {\n    throw new VError(error);\n  }\n}\n","import { Bucket, File } from '../../types/google-cloud-types';\nimport { VError } from 'verror';\nimport { paths } from '../../utils/paths';\nimport { CoreTypes } from '../../types';\nimport { storage } from '../../utils/storage-helper';\n\nexport async function tryDeleteFile(file: File): Promise<boolean> {\n  try {\n    const [exists] = await file.exists();\n    if (exists) {\n      console.log('- deleting file: ', file.name);\n      await file.delete();\n      return true;\n    }\n    return false;\n  } catch (error) {\n    throw new VError(error);\n  }\n}\n\nexport async function RemoveFileWithChildren(\n  bucket: Bucket,\n  itemPath: string\n): Promise<boolean> {\n  try {\n    const allChildren = await storage.GetAllChildrenWithPrefix(bucket, itemPath);\n    const successArray = await Promise.all(\n      allChildren.map(f => tryDeleteFile(f))\n    );\n    const allSuccesses = successArray.reduce(\n      (acc, cur) => (acc = acc && cur),\n      true\n    );\n    return allSuccesses;\n  } catch (error) {\n    throw new VError(error);\n  }\n}\n\nexport async function RemoveFiles(\n  bucket: Bucket,\n  items: string[],\n  claims: CoreTypes.UserCustomClaims\n) {\n  try {\n    const googleStorageItemPaths = items.map(p => paths.EnsureNoPrefixSlash(p));\n    const successArray = await Promise.all(\n      googleStorageItemPaths.map(itemPath =>\n        RemoveFileWithChildren(bucket, itemPath)\n      )\n    );\n    const allSuccesses = successArray.reduce(\n      (acc, cur) => (acc = acc && cur),\n      true\n    );\n    const results: CoreTypes.ResultObj = {\n      success: allSuccesses\n    };\n    return results;\n  } catch (error) {\n    throw new VError(error);\n  }\n}\n","import { Bucket } from '../../types/google-cloud-types';\nimport { CoreTypes } from '../../types';\n\nexport async function EditFile(\n  bucket: Bucket,\n  item: string,\n  content: string,\n  claims: CoreTypes.UserCustomClaims\n) {\n  const result = { success: true };\n  try {\n    await bucket.file(item).save(content);\n  } catch (error) {\n    result.success = false;\n  }\n  return result;\n}\n","import { Bucket } from '../../types/google-cloud-types';\nimport { StreamToPromise } from '../../utils/translation-helpers';\nimport { CoreTypes } from '../../types';\nimport { VError } from 'verror';\n\nexport async function GetFileContent(\n  bucket: Bucket,\n  item: string,\n  claims: CoreTypes.UserCustomClaims\n) {\n  try {\n    const result = await bucket.file(item).get();\n    const file = result[0];\n    const content = await StreamToPromise(file.createReadStream());\n    return content;\n  } catch (error) {\n    throw new VError(error);\n  }\n}\n","import { Bucket, File } from '../../types/google-cloud-types';\nimport { GetSignedUrlConfig } from '@google-cloud/storage';\nimport { VError } from 'verror';\nimport { CoreTypes } from '../../types';\nimport {\n  translateStorageToResFile,\n  translateRawStorage\n} from '../../utils/translation-helpers';\nimport { paths } from '../../utils/paths';\nconst moment = require('moment');\n\nasync function GetUrl(file: File): Promise<string> {\n  try {\n    const in5mins = moment()\n      .add(5, 'minutes')\n      .toDate();\n    const config: GetSignedUrlConfig = { expires: in5mins, action: 'read' };\n    const signedResult = await file.getSignedUrl(config);\n    const url = signedResult.shift();\n    return url;\n  } catch (error) {\n    throw new VError(error);\n  }\n}\n\nexport async function GetSingle(\n  bucket: Bucket,\n  item: string,\n  claims: CoreTypes.UserCustomClaims\n): Promise<CoreTypes.ResFile> {\n  try {\n    const actualFilePath = paths.EnsureNoPrefixSlash(item);\n    const file = bucket.file(actualFilePath);\n    const translatedF = translateRawStorage(file);\n    const resFile = await translateStorageToResFile(translatedF);\n    resFile.downloadUrl = await GetUrl(file);\n    return resFile;\n  } catch (error) {\n    throw new VError(error);\n  }\n}\n","import { Bucket, File } from '../../types/google-cloud-types';\nimport { CoreTypes } from '../../types';\nimport { paths } from '../../utils/paths';\nimport { storage } from '../../utils/storage-helper';\nimport { perms } from '../../permissions';\n\nexport async function CreateFolderWithoutPermissions(\n  bucket: Bucket,\n  newDirectoryPath: string\n) {\n  const directoryPath = paths.EnsureGoogleStoragePathDir(newDirectoryPath);\n  const file = bucket.file(directoryPath);\n  const result = { success: true };\n  try {\n    await file.save('');\n    const blankPerms = perms.factory.blankPermissionsObj();\n    await perms.commands.UpdateFilePermissions(file, blankPerms);\n  } catch (error) {\n    result.success = false;\n  }\n  return result;\n}\n\nexport async function GetNextFreeFoldername(\n  bucket: Bucket,\n  targetChildDir: File\n): Promise<File> {\n  const parentDirectory = paths.GetParentDir(targetChildDir.name);\n  const childrenMatching = await storage.GetListWithoutPermissions(\n    bucket,\n    parentDirectory\n  );\n  const isEmptyParent = !childrenMatching || !childrenMatching.length;\n  if (isEmptyParent) {\n    return targetChildDir;\n  }\n  const childrenMatchingPaths = childrenMatching.map(f =>\n    paths.EnsureGoogleStoragePathDir(f.fullPath)\n  );\n  const targetFolderPath = paths.EnsureGoogleStoragePathDir(targetChildDir.name);\n  const folderExists = childrenMatchingPaths.some(\n    path => path === targetFolderPath\n  );\n  if (!folderExists) {\n    return targetChildDir;\n  }\n  const nextPath = paths.Add2ToPathDir(targetFolderPath);\n  const nextFreeFile = bucket.file(nextPath);\n  return nextFreeFile;\n}\n\nexport async function CreateFolder(\n  bucket: Bucket,\n  newDirectoryPath: string,\n  claims: CoreTypes.UserCustomClaims,\n  disableNoClobber?: boolean,\n  isAdmin?: boolean,\n) {\n  try {\n    const newDirPath = paths.EnsureGoogleStoragePathDir(newDirectoryPath);\n    const newDir = bucket.file(newDirPath);\n    let newDirToAdd: File;\n    if (!disableNoClobber) {\n      newDirToAdd = await GetNextFreeFoldername(bucket, newDir);\n    } else {\n      newDirToAdd = newDir;\n    }\n    if (!isAdmin) {\n      await storage.TryCheckWritePermission(bucket, newDirToAdd.name, claims);\n    }\n    return CreateFolderWithoutPermissions(bucket, newDirToAdd.name);\n  } catch (error) {\n    throw new Error(error);\n  }\n}\n","import { File } from '../../types/google-cloud-types';\nimport { Bucket } from '@google-cloud/storage';\nimport * as request from 'request';\nimport { CoreTypes } from '../../types';\nimport { VError } from 'verror';\nimport { perms } from '../../permissions';\nimport { storage } from '../../utils/storage-helper';\n\nexport function SetPermissionToObj(\n  permissionsObj: CoreTypes.FilePermissionsObject,\n  role: CoreTypes.PermissionsRole,\n  entity: CoreTypes.FilePermissionEntity\n): CoreTypes.FilePermissionsObject {\n  const newPermissions = {\n    ...perms.factory.blankPermissionsObj(),\n    ...permissionsObj\n  };\n  if (role === 'READER') {\n    if (!newPermissions.readers.includes(entity)) {\n      newPermissions.readers.push(entity);\n    }\n  }\n  if (role === 'WRITER') {\n    if (!newPermissions.writers.includes(entity)) {\n      newPermissions.writers.push(entity);\n    }\n  }\n  return newPermissions;\n}\n\nexport async function ChangeSingleFilePermissionsAsSudo(\n  file: File,\n  role: CoreTypes.PermissionsRole,\n  entity: CoreTypes.FilePermissionEntity\n) {\n  try {\n    const currentFilePermissions = await perms.queries.RetrieveFilePermissions(\n      file\n    );\n    const newPermissions = SetPermissionToObj(\n      currentFilePermissions,\n      role,\n      entity\n    );\n    const res = await perms.commands.UpdateFilePermissions(\n      file,\n      newPermissions\n    );\n    return res;\n  } catch (error) {\n    throw new VError(error);\n  }\n}\n\nexport async function TryChangeSingleFilePermissions(\n  file: File,\n  role: CoreTypes.PermissionsRole,\n  entity: CoreTypes.FilePermissionEntity,\n  claims: CoreTypes.UserCustomClaims\n) {\n  try {\n    const currentFilePermissions = await perms.queries.RetrieveFilePermissions(\n      file\n    );\n    const newPermissions = SetPermissionToObj(\n      currentFilePermissions,\n      role,\n      entity\n    );\n    perms.queries.CheckCanEditPermissions(\n      currentFilePermissions,\n      newPermissions,\n      claims\n    );\n    const res = await perms.commands.UpdateFilePermissions(\n      file,\n      newPermissions\n    );\n    return res;\n  } catch (error) {\n    throw new Error(error);\n  }\n}\n\nasync function tryChangePermissions(\n  bucket: Bucket,\n  filePath: string,\n  role: CoreTypes.PermissionsRole,\n  entity: CoreTypes.FilePermissionEntity,\n  isRecursive: boolean,\n  claims: CoreTypes.UserCustomClaims\n): Promise<{}[]> {\n  if (isRecursive) {\n    try {\n      const allChildren = await storage.GetAllChildrenWithPrefix(\n        bucket,\n        filePath\n      );\n      const successArray = await Promise.all(\n        allChildren.map(file =>\n          TryChangeSingleFilePermissions(file, role, entity, claims)\n        )\n      );\n      return successArray;\n    } catch (error) {\n      throw new VError(error);\n    }\n  } else {\n    try {\n      const file = bucket.file(filePath);\n      const result = await TryChangeSingleFilePermissions(\n        file,\n        role,\n        entity,\n        claims\n      );\n      return [result];\n    } catch (error) {\n      throw new VError(error);\n    }\n  }\n}\n\nexport async function ChangePermissions(\n  bucket: Bucket,\n  items: string[],\n  role: CoreTypes.PermissionsRole,\n  entity: CoreTypes.FilePermissionEntity,\n  isRecursive: boolean,\n  claims: CoreTypes.UserCustomClaims\n): Promise<CoreTypes.ResultObj> {\n  try {\n    // perms.queries.TryCheckHasAnyPermissions(claims);\n    const successArr = await Promise.all(\n      items.map(filePath =>\n        tryChangePermissions(\n          bucket,\n          filePath,\n          role,\n          entity,\n          isRecursive,\n          claims\n        )\n      )\n    );\n    // return results;\n    return {\n      success: successArr as any\n    };\n  } catch (error) {\n    throw new Error(error.message);\n  }\n}\n","import { Bucket, File } from '../../types/google-cloud-types';\nimport * as path from 'path';\nimport { CoreTypes } from '../../types';\nimport { paths } from '../../utils/paths';\nimport { storage } from '../../utils/storage-helper';\n\nexport async function SaveBufferToPath(\n  file: File,\n  mimetype: string,\n  buffer: Buffer\n) {\n  const fileOptions = {\n    contentType: mimetype\n  };\n  console.log('uploadFile: SaveBufferToPath', { mimetype, path: file.name });\n  return file.save(buffer, fileOptions);\n}\n\nexport async function GetNextFreeFilename(\n  bucket: Bucket,\n  inputFile: File\n): Promise<File> {\n  const dirNameNoSuffix = paths.GetParentDir(inputFile.name);\n  const childrenMatching = await storage.GetListWithoutPermissions(\n    bucket,\n    dirNameNoSuffix\n  );\n  if (!childrenMatching || !childrenMatching.length) {\n    return inputFile;\n  }\n  const matchingNames = childrenMatching.map(f => f.fullPath).sort();\n  const lastMatch = matchingNames.shift();\n  const nextPath = paths.Add2ToPath(lastMatch);\n  const nextFreeFile = bucket.file(nextPath);\n  return nextFreeFile;\n}\n\nexport async function UploadFile(\n  bucket: Bucket,\n  directoryPath: string,\n  originalname: string,\n  mimetype: string,\n  buffer: Buffer,\n  claims: CoreTypes.UserCustomClaims\n) {\n  const newPath = path.join(directoryPath, originalname);\n  const bucketFilePath = paths.EnsureGoogleStoragePathFile(newPath);\n  const desiredFile = bucket.file(bucketFilePath);\n  try {\n    let file: File;\n    const [exists] = await desiredFile.exists();\n    if (exists) {\n      file = await GetNextFreeFilename(bucket, desiredFile);\n    } else {\n      file = desiredFile;\n    }\n    await SaveBufferToPath(file, mimetype, buffer);\n  } catch (error) {\n    throw new Error('UploadFile: ' + error);\n  }\n}\n","import { File } from '../../types/google-cloud-types';\nimport { Bucket } from '@google-cloud/storage';\nimport * as request from 'request';\nimport { CoreTypes } from '../../types';\nimport { VError } from 'verror';\nimport { perms } from '../../permissions';\nimport { storage } from '../../utils/storage-helper';\n\nexport async function TryChangeSingleFilePermissionsObject(\n  file: File,\n  newPermissions: CoreTypes.FilePermissionsObject,\n  claims: CoreTypes.UserCustomClaims\n) {\n  try {\n    // Disabled for new Admin Flag in config\n    // const currentFilePermissions = await perms.queries.RetrieveFilePermissions(\n    //   file\n    // );\n    // perms.queries.CheckCanEditPermissions(\n    //   currentFilePermissions,\n    //   newPermissions,\n    //   claims\n    // );\n    const res = await perms.commands.UpdateFilePermissions(\n      file,\n      newPermissions\n    );\n    return res;\n  } catch (error) {\n    throw new Error(error);\n  }\n}\n\nasync function tryChangePermissionsObject(\n  bucket: Bucket,\n  filePath: string,\n  permissionsObj: CoreTypes.FilePermissionsObject,\n  isRecursive: boolean,\n  claims: CoreTypes.UserCustomClaims\n): Promise<{}[]> {\n  if (isRecursive) {\n    try {\n      const allChildren = await storage.GetAllChildrenWithPrefix(\n        bucket,\n        filePath\n      );\n      const successArray = await Promise.all(\n        allChildren.map(file =>\n          TryChangeSingleFilePermissionsObject(file, permissionsObj, claims)\n        )\n      );\n      return successArray;\n    } catch (error) {\n      throw new VError(error);\n    }\n  } else {\n    try {\n      const file = bucket.file(filePath);\n      const result = await TryChangeSingleFilePermissionsObject(\n        file,\n        permissionsObj,\n        claims\n      );\n      return [result];\n    } catch (error) {\n      throw new VError(error);\n    }\n  }\n}\n\nexport async function ChangePermissionsObject(\n  bucket: Bucket,\n  items: string[],\n  permissionsObj: CoreTypes.FilePermissionsObject,\n  isRecursive: boolean,\n  claims: CoreTypes.UserCustomClaims\n): Promise<CoreTypes.ResultObj> {\n  try {\n    const successArr = await Promise.all(\n      items.map(filePath =>\n        tryChangePermissionsObject(\n          bucket,\n          filePath,\n          permissionsObj,\n          isRecursive,\n          claims\n        )\n      )\n    );\n    return {\n      success: successArr as any\n    };\n  } catch (error) {\n    throw new Error(error.message);\n  }\n}\n","import { GetList } from './list';\nimport { RenameFile } from './rename';\nimport { MoveFiles } from './move';\nimport { CopyFiles } from './copy';\nimport { RemoveFiles } from './remove';\nimport { EditFile } from './edit';\nimport { GetFileContent } from './getContent';\nimport { GetSingle } from './getSingle';\nimport { CreateFolder } from './createFolder';\nimport { ChangePermissions } from './changePermissions';\nimport { UploadFile } from './uploadFile';\nimport { ChangePermissionsObject } from './changePermissionsObject';\n\nexport const commands = {\n  GetList,\n  RenameFile,\n  MoveFiles,\n  CopyFiles,\n  RemoveFiles,\n  EditFile,\n  GetFileContent,\n  GetSingle,\n  CreateFolder,\n  ChangePermissions,\n  ChangePermissionsObject,\n  UploadFile\n};\n","import { Storage, Bucket } from '../types/google-cloud-types';\nimport { commands } from './commands';\nimport { VError } from 'verror';\nimport { CoreTypes } from '../types';\nasync function CheckHasBodyProp(body: {}, bodyFieldName: string) {\n  const exists = body[bodyFieldName];\n  if (!exists) {\n    throw new Error(\n      `Request is missing property in req.body: '${bodyFieldName}'`\n    );\n  }\n}\n\nexport class NgxFileMangerApiFireBaseClass {\n  constructor(public storage: Storage) {}\n\n  private async getBucket(bucketname: string): Promise<Bucket> {\n    if (!bucketname) {\n      throw new Error(`Request is missing property in req.body: 'bucketname'`);\n    }\n    try {\n      const bucket = this.storage.bucket(bucketname);\n      const exists = (await bucket.exists()).shift();\n      if (!exists) {\n        throw new Error(\n          `bucket: \"${bucketname}\" doesn't exist, please create it first`\n        );\n      }\n      return bucket;\n    } catch (error) {\n      throw new Error('Error retrieving bucket: ' + error.message);\n    }\n  }\n\n  async HandleList(\n    body: CoreTypes.ReqBodyList,\n    claims: CoreTypes.UserCustomClaims\n  ): Promise<CoreTypes.ResBodyList> {\n    try {\n      await CheckHasBodyProp(body, 'path');\n      const bucket = await this.getBucket(body.bucketname);\n      const resFiles = await commands.GetList(\n        bucket,\n        body.path,\n        claims,\n        body.isAdmin\n      );\n      const response: CoreTypes.ResBodyList = {\n        result: resFiles\n      };\n      return response;\n    } catch (error) {\n      throw new VError(error);\n    }\n  }\n\n  async HandleRename(\n    body: CoreTypes.ReqBodyRename,\n    claims: CoreTypes.UserCustomClaims\n  ): Promise<CoreTypes.ResBodyRename> {\n    try {\n      await CheckHasBodyProp(body, 'item');\n      await CheckHasBodyProp(body, 'newItemPath');\n      const bucket = await this.getBucket(body.bucketname);\n      const result = await commands.RenameFile(\n        bucket,\n        body.item,\n        body.newItemPath,\n        claims\n      );\n      const response: CoreTypes.ResBodyRename = {\n        result: result\n      };\n      return response;\n    } catch (error) {\n      throw new VError(error);\n    }\n  }\n\n  async HandleMove(\n    body: CoreTypes.ReqBodyMove,\n    claims: CoreTypes.UserCustomClaims\n  ): Promise<CoreTypes.ResBodyMove> {\n    try {\n      const bucket = await this.getBucket(body.bucketname);\n      await CheckHasBodyProp(body, 'items');\n      await CheckHasBodyProp(body, 'newPath');\n      const result = await commands.MoveFiles(\n        bucket,\n        body.items,\n        body.newPath,\n        claims\n      );\n      const response: CoreTypes.ResBodyMove = {\n        result: result\n      };\n      return response;\n    } catch (error) {\n      throw new VError(error);\n    }\n  }\n\n  async HandleCopy(\n    body: CoreTypes.ReqBodyCopy,\n    claims: CoreTypes.UserCustomClaims\n  ): Promise<CoreTypes.ResBodyCopy> {\n    try {\n      await CheckHasBodyProp(body, 'newPath');\n      const bucket = await this.getBucket(body.bucketname);\n      let filesToCopy;\n      if (body.items) {\n        filesToCopy = body.items;\n      } else if (body.singleFileName) {\n        filesToCopy = [body.singleFileName];\n      } else {\n        throw new Error(\n          'Request does not contain either body.items or body.singleFileName'\n        );\n      }\n      const result = await commands.CopyFiles(\n        bucket,\n        filesToCopy,\n        body.newPath,\n        claims\n      );\n      const response: CoreTypes.ResBodyCopy = {\n        result: result\n      };\n      return response;\n    } catch (error) {\n      throw new VError(error);\n    }\n  }\n\n  async HandleRemove(\n    body: CoreTypes.ReqBodyRemove,\n    claims: CoreTypes.UserCustomClaims\n  ): Promise<CoreTypes.ResBodyRemove> {\n    try {\n      await CheckHasBodyProp(body, 'items');\n      const bucket = await this.getBucket(body.bucketname);\n      const result = await commands.RemoveFiles(bucket, body.items, claims);\n      const response: CoreTypes.ResBodyRemove = {\n        result: result\n      };\n      return response;\n    } catch (error) {\n      throw new VError(error);\n    }\n  }\n\n  async HandleEdit(\n    body: CoreTypes.ReqBodyEdit,\n    claims: CoreTypes.UserCustomClaims\n  ): Promise<CoreTypes.ResBodyEdit> {\n    try {\n      await CheckHasBodyProp(body, 'item');\n      await CheckHasBodyProp(body, 'content');\n      const bucket = await this.getBucket(body.bucketname);\n      const result = await commands.EditFile(\n        bucket,\n        body.item,\n        body.content,\n        claims\n      );\n      const response: CoreTypes.ResBodyEdit = {\n        result: result\n      };\n      return response;\n    } catch (error) {\n      throw new VError(error);\n    }\n  }\n\n  async HandleGetContent(\n    body: CoreTypes.ReqBodyGetContent,\n    claims: CoreTypes.UserCustomClaims\n  ): Promise<CoreTypes.ResBodyGetContent> {\n    try {\n      await CheckHasBodyProp(body, 'item');\n      const bucket = await this.getBucket(body.bucketname);\n      const result = await commands.GetFileContent(bucket, body.item, claims);\n      const response: CoreTypes.ResBodyGetContent = {\n        result: result\n      };\n      return response;\n    } catch (error) {\n      throw new VError(error);\n    }\n  }\n\n  async HandleGetSingle(\n    body: CoreTypes.ReqBodyGetSingle,\n    claims: CoreTypes.UserCustomClaims\n  ): Promise<CoreTypes.ResBodyGetSingle> {\n    try {\n      await CheckHasBodyProp(body, 'item');\n      const bucket = await this.getBucket(body.bucketname);\n      const file = await commands.GetSingle(bucket, body.item, claims);\n      const response: CoreTypes.ResBodyGetSingle = {\n        result: {\n          success: true,\n          file: file,\n          url: file.downloadUrl\n        }\n      };\n      return response;\n    } catch (error) {\n      throw new VError(error);\n    }\n  }\n\n  async HandleCreateFolder(\n    body: CoreTypes.ReqBodyCreateFolder,\n    claims: CoreTypes.UserCustomClaims\n  ): Promise<CoreTypes.ResBodyCreateFolder> {\n    try {\n      await CheckHasBodyProp(body, 'newPath');\n      const bucket = await this.getBucket(body.bucketname);\n      const result = await commands.CreateFolder(\n        bucket,\n        body.newPath,\n        claims,\n        body.disableNoClobber,\n        body.isAdmin\n      );\n      const response: CoreTypes.ResBodyCreateFolder = {\n        result: result\n      };\n      return response;\n    } catch (error) {\n      throw new VError(error);\n    }\n  }\n\n  async HandleSetPermissions(\n    body: CoreTypes.ReqBodySetPermissions,\n    claims: CoreTypes.UserCustomClaims\n  ): Promise<CoreTypes.ResBodySetPermissions> {\n    try {\n      await CheckHasBodyProp(body, 'items');\n      await CheckHasBodyProp(body, 'role');\n      await CheckHasBodyProp(body, 'entity');\n      const bucket = await this.getBucket(body.bucketname);\n      const result = await commands.ChangePermissions(\n        bucket,\n        body.items,\n        body.role,\n        body.entity,\n        body.recursive,\n        claims\n      );\n      const response: CoreTypes.ResBodySetPermissions = {\n        result: result\n      };\n      return response;\n    } catch (error) {\n      throw new VError(error.message);\n    }\n  }\n\n  async HandleSetPermissionsObject(\n    body: CoreTypes.ReqBodySetPermissionsObject,\n    claims: CoreTypes.UserCustomClaims\n  ): Promise<CoreTypes.ResBodySetPermissions> {\n    try {\n      await CheckHasBodyProp(body, 'items');\n      await CheckHasBodyProp(body, 'permissionsObj');\n      const bucket = await this.getBucket(body.bucketname);\n      const result = await commands.ChangePermissionsObject(\n        bucket,\n        body.items,\n        body.permissionsObj,\n        body.recursive,\n        claims\n      );\n      const response: CoreTypes.ResBodySetPermissions = {\n        result: result\n      };\n      return response;\n    } catch (error) {\n      throw new VError(error.message);\n    }\n  }\n\n  async HandleSaveFile(\n    bucketname: string,\n    directoryPath: string,\n    originalname: string,\n    mimetype: string,\n    buffer: Buffer,\n    claims: CoreTypes.UserCustomClaims\n  ): Promise<CoreTypes.ResBodyUploadFile> {\n    try {\n      const bucket = await this.getBucket(bucketname);\n      await commands.UploadFile(\n        bucket,\n        directoryPath,\n        originalname,\n        mimetype,\n        buffer,\n        claims\n      );\n      const result = {\n        result: {\n          success: true\n        }\n      };\n      return result;\n    } catch (error) {\n      throw new VError(error);\n    }\n  }\n}\n","import { NextFunction } from 'express';\nimport * as formidable from 'formidable';\nimport * as fs from 'fs';\nimport { Files } from 'formidable';\n\nexport const ParseUploadFile = async (req, res, next: NextFunction) => {\n  try {\n    const form = new formidable.IncomingForm();\n    const files = await new Promise<formidable.File[]>((resolve, reject) => {\n      form.parse(req, function(err, fields, fieldFileMap: Files) {\n        const fileArray = Object.values(fieldFileMap) as formidable.File[];\n        resolve(fileArray);\n      });\n    });\n    const convertedFiles = await Promise.all(\n      files.map(f => convertToFileAndBuffer(f))\n    );\n    req.files = convertedFiles;\n    next();\n  } catch (error) {\n    console.error(error);\n    throw new Error(error);\n  }\n};\n\nasync function convertToFileAndBuffer(\n  f: formidable.File\n): Promise<UploadedFile> {\n  const fileBuffer = await new Promise<Buffer>((resolve, reject) =>\n    fs.readFile(f.path, function(err, buffer) {\n      if (err) {\n        reject(err);\n      } else {\n        resolve(buffer);\n      }\n    })\n  );\n  fs.unlinkSync(f.path);\n  return {\n    buffer: fileBuffer,\n    mimetype: f.type,\n    originalname: f.name,\n    hash: f.hash\n  };\n}\n\nexport interface UploadedFile {\n  buffer: Buffer;\n  hash: string;\n  mimetype: string;\n  originalname: string;\n}\n","// Add middle ware to this route\nconst express = require('express');\nimport {\n  OptionRequestsAreOk,\n  PostRequestsOnly,\n  HasBodyProp,\n  HasQueryParam,\n  AddCors,\n  LogRequest\n} from './middleware-helpers';\nimport { Storage } from '../types/google-cloud-types';\nimport { NgxFileMangerApiFireBaseClass } from '../api/firebase-storage-api';\nimport { VError } from 'verror';\nimport { Request, Response, NextFunction } from 'express';\n\nlet fmApi: NgxFileMangerApiFireBaseClass;\nlet LOGGING = false;\n\nconst endpoint = express();\nendpoint.use(AddCors);\nendpoint.use(OptionRequestsAreOk);\nendpoint.use((req: Request, res: Response, next: NextFunction) => {\n  \n  req.body.path = `${req.body._c_id}/${req.body.path}`;\n  \n  if (LOGGING) {\n    LogRequest(req, res, next);\n  } else {\n    next();\n  }\n});\n\nendpoint.use('/hello', async (req, res) => {\n  console.log('HELLO');\n  res.status(200).send('HELLO\\n');\n});\n\nendpoint.use(PostRequestsOnly);\n\nimport { ParseUploadFile, UploadedFile } from './middleware-upload';\nimport { permsQueries } from '../permissions/permissions-queries';\nimport { CoreTypes } from '../types';\n\nendpoint.use(\n  '/upload',\n  OptionRequestsAreOk,\n  PostRequestsOnly,\n  HasQueryParam('bucketname'),\n  HasQueryParam('directoryPath'),\n  ParseUploadFile,\n  async (req, res, next) => {\n    const bucketname: string = req.query.bucketname;\n    const directoryPath: string = req.query.directoryPath;\n    try {\n      const files = req.files as UploadedFile[];\n      const userClaims = await permsQueries.RetrieveCustomClaims(req);\n      const results = await Promise.all(\n        files.map(file =>\n          trySaveFile(bucketname, directoryPath, file, userClaims)\n        )\n      );\n      const success = {\n        result: {\n          success: true\n        }\n      };\n      const finalResult = results.reduce((acc, cur) => {\n        if (cur.result.error) {\n          return cur;\n        }\n        return success;\n      }, success);\n      res.status(200).send(finalResult);\n    } catch (error) {\n      console.error(\n        'Error occurred while uploading: \\n',\n        VError.fullStack(error)\n      );\n      res\n        .status(400)\n        .send('Error occurred while uploading: \\n' + error.message);\n      return;\n    }\n  }\n);\n\nasync function trySaveFile(\n  bucketname: string,\n  directoryPath: string,\n  f: UploadedFile,\n  userClaims: CoreTypes.UserCustomClaims\n) {\n  return fmApi.HandleSaveFile(\n    bucketname,\n    directoryPath,\n    f.originalname,\n    f.mimetype,\n    f.buffer,\n    userClaims\n  );\n}\n\nendpoint.use(\n  '/',\n  HasBodyProp('action'),\n  HasBodyProp('bucketname'),\n  async (req, res) => {\n    const action: CoreTypes.FileManagerAction = req.body.action;\n    try {\n      const userClaims = await permsQueries.RetrieveCustomClaims(req);\n      let body;\n      switch (action) {\n        case 'list':\n          body = await fmApi.HandleList(req.body, userClaims);\n          break;\n        case 'rename':\n          body = await fmApi.HandleRename(req.body, userClaims);\n          break;\n        case 'move':\n          body = await fmApi.HandleMove(req.body, userClaims);\n          break;\n        case 'copy':\n          body = await fmApi.HandleCopy(req.body, userClaims);\n          break;\n        case 'remove':\n          body = await fmApi.HandleRemove(req.body, userClaims);\n          break;\n        case 'edit':\n          body = await fmApi.HandleEdit(req.body, userClaims);\n          break;\n        case 'getContent':\n          body = await fmApi.HandleGetContent(req.body, userClaims);\n          break;\n        case 'createFolder':\n          body = await fmApi.HandleCreateFolder(req.body, userClaims);\n          break;\n        case 'getSingle':\n          body = await fmApi.HandleGetSingle(req.body, userClaims);\n          break;\n        case 'changePermissions':\n          body = await fmApi.HandleSetPermissions(req.body, userClaims);\n          break;\n        case 'changePermissionsObject':\n          body = await fmApi.HandleSetPermissionsObject(req.body, userClaims);\n          break;\n        case 'compress':\n        case 'extract':\n        case 'downloadMultiple':\n        default:\n          throw new Error('action has not been implemented');\n      }\n      res.status(200).send(body);\n    } catch (error) {\n      console.error(\n        'Error while processing request: \\n',\n        VError.fullStack(error)\n      );\n      const returnedError = {\n        error: `Bad request to ngx-file-manager!`,\n        errorDetail: error.message,\n        requestBody: req.body\n      };\n      res.status(400).send(returnedError);\n    }\n  }\n);\nendpoint.use(notImplemented);\n\nasync function notImplemented(req, res) {\n  const bodyString = JSON.stringify(req.body);\n  res.status(501).send('That request has not been implemented: ' + bodyString);\n}\n\nexport interface FileManagerEndpointOptions {\n  logging?: boolean;\n  storage: Storage;\n}\n\n/*\nUse by attaching to a firebase function\nexports.FileManagerApi = StorageEndpoint;\n*/\nexport const FileManagerEndpointExpress = (\n  options: FileManagerEndpointOptions\n) => {\n  LOGGING = options.logging;\n  fmApi = new NgxFileMangerApiFireBaseClass(options.storage);\n  return endpoint;\n};\n","/*\n * Public API Surface of ngx-filemanager-api-firebase\n */\n\nexport * from './lib/endpoint/endpoint-express';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":["jwt.decode","path.dirname","path.join","path.basename","formidable.IncomingForm","fs.readFile","fs.unlinkSync"],"mappings":"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"}